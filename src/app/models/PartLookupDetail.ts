/**
 * VDMS
 * vDMS Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';
import * as models from './models';

export interface PartLookupDetail {
    

    /**
     * Compensation value when part and customer qualify
     */
    compPrice?: number;

    /**
     * Part description
     */
    description?: string;

    /**
     * Core value of the part
     */
    exchangePrice?: number;

    /**
     * Extra pricing field used to store additional pricing information related to the part
     */
    extraPrice1?: number;

    /**
     * Extra pricing field used to store additional pricing information related to the part for other manufacturers
     */
    extraPrice2?: number;

    /**
     * Extra pricing field used to store additional pricing information related to the part for other manufacturers
     */
    extraPrice3?: number;

    /**
     * Extra pricing field used to store additional pricing information related to the part for other manufacturers
     */
    extraPrice4?: number;

    /**
     * Extra pricing field used to store additional pricing information related to the part for other manufacturers
     */
    extraPrice5?: number;

    /**
     * List price of part
     */
    listPrice?: number;

    /**
     * Additional formula for determining price/manufacturing details of a part
     */
    lookupSource?: string;

    /**
     * OEM manufacturer code
     */
    makeCode?: string;

    /**
     * Quantity code of part in inventory
     */
    onHandCode?: string;

    /**
     * Quantity value of part in inventory
     */
    onHandQty?: number;

    /**
     * Quantity of part on order
     */
    onOrderQty?: number;

    originalPartNumber?: boolean;

    /**
     * Cost of part to dealership
     */
    partCost?: number;

    /**
     * DMS Part ID
     */
    partId?: string;

    /**
     * Bin location of part in dealership's parts warehouse
     */
    partLocation?: string;

    /**
     * True/False value indicating if part has been replaced
     */
    partReplaced?: boolean;

    /**
     * Number of special orders that have not been fulfilled or closed
     */
    preSoldQty?: number;

    /**
     * DMS Part Id the current part replaced
     */
    replacingPartId?: string;

    /**
     * Quantity of part being requested
     */
    requestedQty?: number;

    /**
     * Calculated sale price to customer
     */
    salePrice?: number;

    /**
     * Secondary bin location of part
     */
    secondaryLocation?: string;

    /**
     * Shelf location of part
     */
    shelfLocation?: string;

    /**
     * Status defined to detail whether part is normally stocked
     */
    stockCode?: string;

    /**
     * DMS value related to where current part stands in supersession
     */
    supersedeCode?: string;

    /**
     * DMS Part Id that replaces the current part
     */
    supersedePartId?: string;

    /**
     * Trade price when used for selling to other dealers
     */
    tradePrice?: number;

    /**
     * Weight of each part in pounds or kilograms
     */
    unitWeight?: number;
}
